
@{
    ViewBag.Title = Model.Name;
    IAuthentication auth = DependencyResolver.Current.GetService<IAuthentication>();
    User usr = auth.User;
}
@using ChudoPechkaLib.Models;
@using ChudoPechkaLib;
@model ChudoPechkaLib.Models.Group
@section ScriptAndStyle{
    <style>
        .line {
            width: 30%;
        }

        #login {
            width: 30%;
            margin-right: 1%;
        }
    </style>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
    <script>
        function send() {
            var login = $("#login").val();
            var token = $("#content").find("input").filter(':hidden').attr("name") + "=" + $("#content").find("input").filter(':hidden').val()
            $.ajax({
                method: "Get",
                url: "@Url.Action("SendAnnounced", "Announced")?From=@Model.Id&To=" + login + "&Type=0&" + token,
            });
        }
        function addAuthor(login) {
            $.ajax({
                method: "Get",
                url: "@Url.Action("AddAuthor", "Group")?Group_id=@Model.Id&Login=" + login,
            });
        }

    </script>
    @if(Model.Authors.Contains(usr.Author))
    {
        <script>
            var ids = [];
        </script>
        foreach (User item in Model.Users)
        {
            <script>
                ids[ids.length] = '@item.Login';
            </script>
        }
        <script>
            $(window).load(function () {
                //$("#MembersContainer").find($(".UserLink")).find($(".User-info")).append("<div style=\"float:right;margin-right:3% \"><button class=\"button\" onclick=\"addAuthor('@Model.')\">Назначить</div>");
                for (var i = 0; i < ids.length; i++) {
                    $("#" + ids[i]).find($(".User-info")).append("<div style=\"float:right;margin-right:3% \"><button class=\"button\" onclick=\"addAuthor('" + ids[i] + "')\">Назначить</div>")
                }

                $("#content").find("input").filter(':hidden').val();
            });
        </script>
    }
}
@Html.AntiForgeryToken()
<div>
    <div style="text-align:center;">
        <div>
            <span style="font-size:16pt; margin: 10px;">@Model.Name</span>
        </div>
        @if (auth.IsAuthentication && (Model.Users.Contains(usr) || Model.Authors.FirstOrDefault((a) => a.User.Equals(usr)) != null))
        {
            <div style="margin-top:10px;">
                <input type="text" class="text-box" id="login" /><button class="button" onclick="send()">Отправить</button>
            </div>
        }
        <div>
            <hr size="5" color="black" class="line" style="margin-top:15px;" />
            <span style="font-family:'Segoe Print'; font-size:16pt">Автор</span>
            <hr size="5" color="black" class="line" />
        </div>
    </div>
    <div>
        @foreach (Author item in Model.Authors)
        {
            Html.RenderAction("GetUser", "Account", new { login = item.User.Login });
        }
    </div>
</div>
@if (Model.Users.Count > 0)
{
    <div>
        <div style="text-align:center;">
            <hr size="5" color="black" class="line" />
            <span style="font-family:'Segoe Print'; font-size:16pt">Участники</span>
            <hr size="5" color="black" class="line" />
        </div>
        <div id="MembersContainer">
            @foreach (User item in Model.Users)
            {
                Html.RenderAction("GetUser", "Account", new { login = item.Login });
            }
        </div>
    </div>
}
