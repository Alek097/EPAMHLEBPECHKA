@{
    IDBManager auth = DependencyResolver.Current.GetService<IDBManager>();
    Group grp;
    Layout = null;
}
@using System.Collections.Generic
@using ChudoPechkaLib.Models
@using ChudoPechkaLib;

@model List<Announced>
@if (Model.Count > 0)
{
    foreach (Announced item in Model)
    {
        if (item.Type == (byte)AnnouncedType.InvitationToGroup && auth.GetGroup(item.From, out grp))
        {
            if (item.IsRead)
            {
                <div class="announced">
                    <div>
                        <div style="float: right; padding-right:20%;padding-top:1%; opacity: 0.5;">
                            <span>
                                @string.Format("Группа {0} предлагает стать её участником.", grp.Name)
                            </span>
                        </div>
                        <div>
                            <button class="button" onclick="AcceptInvationToGroup('@item.From')">Принять</button>
                        </div>
                    </div>

                </div>
            }
            else
            {
                <div class="announced">
                    <div>
                        <div style="float: right; padding-right:20%;padding-top:1%">
                            <span>
                                @string.Format("Группа {0} предлагает стать её участником.", grp.Name)
                            </span>
                        </div>
                        <div>
                            <button class="button" onclick="AcceptInvationToGroup('@item.From')">Принять</button>
                        </div>
                    </div>
                </div>
            }
        }

    }
}
else
{
    <div style="font-size:19pt; text-align: center;"><span>У вас нет оповещаний</span></div>
}
@{
    foreach (Announced item in Model)
    {
        auth.SetReadAnnounced(item);
    }
}
