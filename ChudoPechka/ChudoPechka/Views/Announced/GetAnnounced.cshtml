@{
    IAuthentication auth = DependencyResolver.Current.GetService<IAuthentication>();
    Group grp;
    Layout = null;
}
@using System.Collections.Generic
@using ChudoPechkaLib.Models
@using ChudoPechkaLib;

@model List<Announced>
@foreach (Announced item in Model)
{
    if (item.Type == (byte)AnnouncedType.InvitationToGroup && auth.GetGroup(item.From, out grp))
    {
        if (item.IsRead)
        {
            <div class="announced" style="opacity:0.5">

                <div>
                    <div style="float:right; padding-right:20%;padding-top:1%">
                        <span>
                            @string.Format("Группа {0} предлагает стать её участником.", grp.Name)
                        </span>
                    </div>
                    <div>
                        <button class="button" onclick="AcceptInvationToGroup('@item.From')">Принять</button>
                    </div>
                </div>

            </div>
        }
        else
        {
            <div class="announced">

                <div>
                    <div style="float:right; padding-right:20%;padding-top:1%">
                        <span>
                            @string.Format("Группа {0} предлагает стать её участником.", grp.Name)
                        </span>
                    </div>
                    <div>
                        <button class="button" onclick="AcceptInvation('@item.From')">Принять</button>
                    </div>
                </div>

            </div>
        }
    }

}
@{ 
    foreach (Announced item in Model)
    {
        auth.SetReadAnnounced(item);
    }
}
